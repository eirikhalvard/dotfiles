#!/bin/bash
##################### GENERIC EXPORTS #####################
export GOPATH=$HOME/go
export PATH=$PATH:$HOME/bin
export PATH=$PATH:$HOME/.config/scripts
export PATH=$PATH:$HOME/.local/bin/
export PATH=$PATH:$HOME/.krew/bin
export PATH=$PATH:$HOME/.ghcup/bin
export PATH="/opt/homebrew/opt/make/libexec/gnubin:$PATH"
export PATH="$PATH:/opt/homebrew/Cellar/llvm@12/12.0.1_1/bin"
export C_INCLUDE_PATH="$(xcrun --show-sdk-path)/usr/include/ffi"

export PATH=$PATH:$GOPATH/bin

# export PATH=$PATH:"/Users/Eirik/bin/FDK/Tools/osx"
# export FDK_EXE="/Users/Eirik/bin/FDK/Tools/osx"
export LC_ALL=en_US.UTF-8
export EDITOR="nvim"

##################### CUSTOM EXPORTS ######################
export DRIVE=$HOME/Drive
export SKOLE=$DRIVE/Skole
export PROSJEKTER=$SKOLE/Prosjekter
export CONFIG=$HOME/.config
export XDG_CONFIG_HOME=$CONFIG

##################### ALIAS COMMANDS ######################
alias c='clear'
alias pwdc='pwd | pbcopy'
alias ifi='ssh eirikhsa@login.ifi.uio.no'
alias pcat='ccat ~/.bash_profile'
alias psrc='source ~/.zshrc'
alias vim='nvim'
alias v='nvim -c "Telescope find_files"'
alias vg='nvim +Git +only'
alias vn='nvim ~/Drive/Diverse/notes.md'
alias o='open .'
alias k='kubectl'
alias mergepdfs='/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py'
alias mantar='curl cheat.sh/tar'

alias l='clear && exa --long --all --group-directories-first'
alias ls='exa --group-directories-first'
alias tree="clear && exa --tree --group-directories-first --git-ignore"
for i in {1..6}; do
    aliasContent="clear && exa --tree --level=${i} --group-directories-first --git-ignore"
    alias tree${i}=${aliasContent}
done


alias ff="fzf --preview='
if file --mime-type {} | grep -qF 'image/'; then
    kitty icat --clear --transfer-mode=memory --stdin=no --place=\${FZF_PREVIEW_COLUMNS}x\${FZF_PREVIEW_LINES}@0x0 {}
else
    bat --color=always {}
fi
'"
alias t='tmux'
alias ta='tmux attach -t'
alias tn='tmux new -s'
alias ts='tmux swap-pane -U'
alias tls='tmux ls'
alias tkeys='tmux list-keys | fzf'

alias gdm='git diff $(g merge-base --fork-point $(git_main_branch))'
alias grw='gh repo view --web'
alias gpw='gh pr view --web'
alias gpc='gh pr create --assignee @me'
alias gpm='gh pr merge --rebase --delete-branch'
alias gsm='git switch $(git_main_branch)'

alias sbtc='sbt "Test / compile"'
alias sbtt='sbt -mem 12000 test'
alias sbtut='sbt unitTest'
alias sbta='sbt -mem 12000 -jvm-debug 5005 api/run'

alias fujit='fuji createAndTransfer --all --name'

alias -g FF='$(fzf)'
alias -g PF='| fzf'
alias -g G='| grep'
alias -g CC='| pbcopy'

klogs2() {
    while IFS= read -r line; do
        echo "$line" | jq -r '
      try "\u001b[36m\(.["@timestamp"])\u001b[0m " +
          (if .level == "ERROR" then "\u001b[31m[ERROR]\u001b[0m"
           elif .level == "WARN" then "\u001b[33m[WARN]\u001b[0m"
           elif .level == "INFO" then "\u001b[32m[INFO]\u001b[0m"
           else "[\(.level)]" end) +
          " \(.message)"
        catch .'
    done
}


# Usage: kubectl logs POD | klogs
klogs() {
    grep -E "^\{.*\}$" | jq -r '
  "\u001b[36m\(.["@timestamp"])\u001b[0m " +
  (if .level == "ERROR" then "\u001b[31m[ERROR]\u001b[0m"
   elif .level == "WARN" then "\u001b[33m[WARN]\u001b[0m"
   elif .level == "INFO" then "\u001b[32m[INFO]\u001b[0m"
   else "[\(.level)]" end) +
  " \(.message)"
    '
}

# Use git switch (gsw) instead
unalias gcm
unalias gco

##################### FUNCTIONS ###########################

unalias z 2> /dev/null
z() {
    [ $# -gt 0 ] && zshz "$*" && return
    cd "$(zshz -l 2>&1 | fzf --height 40% --nth 2.. --reverse --inline-info +s --tac --query "${*##-* }" | sed 's/^[0-9,.]* *//')"
}

arun() {
    $(alias | grep -v "base16" | fzf | sed "s/.*=\(.*\)/\1/" | sed "s/'//g")
}

gfix() {
    git commit --fixup "${1}" && git rebase --interactive --autosquash "${1}~1"
}

################## NODE VERSION MANAGER ###################
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"  # This loads nvm bash_completion

######################### COLORS #########################
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
[ -s "$BASE16_SHELL/profile_helper.sh" ] && \
source "$BASE16_SHELL/profile_helper.sh"

isLight() {
    grep -q "vim.g.color_is_light = true" ~/.config/nvim/lua/my/compiled_colortype.lua
}

light() {
    echo "vim.g.color_is_light = true" > ~/.config/nvim/lua/my/compiled_colortype.lua
    cat "$CONFIG/k9s/skin_light.yml" > "$CONFIG/k9s/skin.yml"
    sed -i "" 's/dark = true/light = true/g' ~/.config/shell/gitconfig
    base16_one-light
}

dark() {
    echo "vim.g.color_is_light = false" > ~/.config/nvim/lua/my/compiled_colortype.lua
    cat "$CONFIG/k9s/skin_dark.yml" > "$CONFIG/k9s/skin.yml"
    sed -i "" 's/light = true/dark = true/g' ~/.config/shell/gitconfig
    base16_gruvbox-dark-hard
}

##################### WELCOME MESSAGE #####################
clear;
. "$HOME/.cargo/env"