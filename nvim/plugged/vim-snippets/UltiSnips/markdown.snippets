priority -50

global !p
def create_table(snip):
    # retrieving single line from current string and treat it like tabstops count
    placeholders_string = snip.buffer[snip.line].strip()[2:].split("x",1)
    rows_amount = int(placeholders_string[0])
    columns_amount = int(placeholders_string[1])

    # erase current line
    snip.buffer[snip.line] = ''

    # create anonymous snippet with expected content and number of tabstops
    anon_snippet_title = ' | '.join(['$' + str(col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_delimiter = ':-|' * (columns_amount-1) + ":-\n"
    anon_snippet_body = ""
    for row in range(1,rows_amount+1):
        anon_snippet_body += ' | '.join(['$' + str(row*columns_amount+col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_table = anon_snippet_title + anon_snippet_delimiter + anon_snippet_body

    # expand anonymous snippet
    snip.expand_anon(anon_snippet_table)
endglobal

###########################
# Sections and Paragraphs #
###########################
snippet sec "Section" b
# ${1:Section Name} #
$0
endsnippet

snippet ssec "Sub Section" b
## ${1:Section Name} ##
$0
endsnippet

snippet sssec "SubSub Section" b
### ${1:Section Name} ###
$0
endsnippet

snippet par "Paragraph" b
#### ${1:Paragraph Name} ####
$0
endsnippet

snippet spar "Paragraph" b
##### ${1:Paragraph Name} #####
$0
endsnippet

###################
# Text formatting #
###################

snippet * "italics"
*${1:${VISUAL}}*$0
endsnippet

snippet ** "bold"
**${1:${VISUAL}}**$0
endsnippet

snippet *** "bold italics"
***${1:${VISUAL}}***$0
endsnippet


################
# Common stuff #
################
snippet link "Link to something"
[${1:${VISUAL:Text}}](${3:http://${2:www.url.com}})$0
endsnippet

snippet img "Image"
![${1:pic alt}](${2:path}${3/.+/ "/}${3:opt title}${3/.+/"/})$0
endsnippet

snippet ilc "Inline Code" i
\`$1\`$0
endsnippet

snippet cbl "Codeblock" b
\`\`\`
$1
\`\`\`
$0
endsnippet

snippet refl "Reference Link"
[${1:${VISUAL:Text}}][${2:id}]$0

[$2]:${4:http://${3:www.url.com}} "${5:$4}"
endsnippet

snippet fnt "Footnote"
[^${1:${VISUAL:Footnote}}]$0

[^$1]:${2:Text}
endsnippet

pre_expand "create_table(snip)"
snippet "tb(\d+x\d+)" "Customizable table" br
endsnippet



### CUSTOM SNIPPETS

snippet template
---
title: Title
subtitle: Subtitle
author:
- Eirik Halvard Sæther
theme: "metropolis"
...

# Hei

## Greier

ting \$3 \\cdot 4\$

    if (a == b):
      then 4
      else 5

- hei
- du

## Div

- ting

- og

- tang


tingene er slik.
endsnippet


snippet beamer "beamer template"
---
title: LTEP Master Thesis Presentation
subtitle: Merging Of Evolution Plans
author:
- Eirik Halvard Sæther
...

# Test av step-by-step

\only<1>{
  \center Kun på nr1
}

\only<2->{
  \center Fra 2 og ut
}

\only<2>{
  \center Kun i 2
}

\only<3>{
  \center Kun i 3
}


# custom pause points

- hei
- du
\pause
- hva 
- skjer
\pause
- ikke tenk
- på det



# Bilder osv

\center \includegraphics[height = 0.7\textheight]{./example-cropped.jpg}
endsnippet


snippet IG "Ikke gjort" A
Ikke gjort.
endsnippet

snippet HR "Helt riktig!" A
Helt riktig!
endsnippet

snippet IR "Ikke riktig." A
Ikke riktig.
endsnippet

snippet IHR "Ikke helt riktig." A
Ikke helt riktig.
endsnippet

snippet LF "løsningsforslag" A
løsningsforslag
endsnippet

snippet scheme
\`\`\`scheme
$1
\`\`\`
$0
endsnippet

snippet lfindenteringsfeil
Her har du indentert uttrykket litt feil. Husk at i Scheme, så skal alle argumenter til funksjoner være like mye indentert hvis de er på forskjellige linjer. I dette tilfellet, så hadde du skrevet prosedyren slik:

\`\`\`scheme$1
\`\`\`

Riktig indentert ser det slik ut:
\`\`\`scheme$2
\`\`\`
$0
endsnippet


snippet \land "logical and" A
∧
endsnippet

snippet \neg "logical negation" A
¬
endsnippet

snippet \lor "logical or" A
∨
endsnippet

snippet \imp "logical implication" A
→
endsnippet

snippet \tup "tuple" A
⟨${VISUAL}$1⟩$0
endsnippet

snippet \in "element in" A
∈
endsnippet

snippet \forall "forall quantifier" A
∀
endsnippet

snippet \exists "exists quantifier" A
∃
endsnippet

snippet transref "transref"
Siden vi kan gå fra $1 til $2, og fra $2 til $1, så må vi kunne gå fra $1 til $1
endsnippet

snippet konkbegr "konlusjon og begrunnelse"
Riktig konklusjon, men begrunnelsen blir feil.$0
endsnippet
